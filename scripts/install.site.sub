#!/bin/sh

##
# install.site.sub - user-created set install script functions
#
# Author: Fletcher Nichol
# $Id$
##

Echo=/bin/echo
Egrep=/usr/bin/egrep
Find=/usr/bin/find
Ftp=/usr/bin/ftp
Groupadd=/usr/sbin/groupadd
Nawk=/usr/bin/nawk
Patch=/usr/bin/patch
Pkg_add=/usr/sbin/pkg_add
Sed=/usr/bin/sed
Tr=/usr/bin/tr
Useradd=/usr/sbin/useradd
Xargs=/usr/bin/xargs

Echo_msg=$Echo
Fetch_cmd="$Ftp -V -m"

Info="===>"
Info_detail=">>"


getProfileVar()
{
	[ -z "$1" ] && return 1
	var="$1"

	${SI_CONFIG_DIR}/find-profile-var --variable=$var $PROFILE
	return $?
}


getKeywordList()
{
	[ -z "$1" ] && return 1
	keyword="$1"

	list="`$Egrep \"^$keyword[[:space:]]+\" $PROFILE | \
		$Sed -e \"s|^$keyword[[:space:]]\{1,\}||\" | $Tr '\n' ',' | \
		$Sed -e 's|,$|\\\|' | $Tr '\\\' '\n'`"

	if [ -n "$list" ]; then
		echo "$list"
		return 0
	else
		return 10
	fi
}


fetchFile()
{
	[ -z "$1" -o -z "$2" ] && return 1
	file="$1"
	shift
	sites="$@"

	for site in $sites; do
		$Echo_msg "$Info_detail ${site}${file}."
		if $Fetch_cmd ${site}${file}; then
			# file has been successfully downloaded
			return 0;
		fi
	done
	
	# if we make it this far, then no suitable site was found for the file
	return 10
}


i_execScripts()
{
	[ -z "$1" ] && return 1
	[ "$1" != "pre" -a "$1" != "post" ] && return 2
	prefix="$1"

	scripts="`getKeywordList ${prefix}script | tr ',' ' '`"

	if [ -n "$scripts" ]; then
		$Echo_msg "$Info Executing ${prefix}-scripts ..."
	else
		$Echo_msg "$Info No ${prefix}-scripts"
	fi

	for script in $scripts; do
		$Echo_msg "$Info_detail Script ${SI_CONFIG_DIR}/$script"
		. ${SI_CONFIG_DIR}/$script
	done
}


execPrescripts()
{
	i_execScripts pre
}


execPostscripts()
{
	i_execScripts post
}


patchSystemFiles()
{
	$Echo_msg "$Info Patching system files ..."

	patchfiles="`$Find ${MNTROOT}/tmp/patchfiles -type f -name *.patch | \
		$Xargs`"

	for patchfile in $patchfiles; do
		$Echo_msg "$Info_detail Patching with $patchfile"
		(cd ${MNTROOT}/; $Patch -s -p1 < $patchfile)
	done
}


i_exportPkgPath()
{
	PKG_PATH=`getProfileVar pkg_sites | tr ' ' ':'`
	export PKG_PATH
}


addPackages()
{
	$Echo_msg "$Info Install packages ..."

	i_exportPkgPath

	packages="`getKeywordList pkg | tr ',' ' '`"
	for pkg in $packages; do
		$Pkg_add $pkg
	done
}


i_addGroups()
{
	$Echo_msg "$Info Adding groups ..."

	getKeywordList group | tr ',' '\n' | while read user_line; do
		group="`$Echo $user_line | $Nawk -F':' '{ print $1 }'`"
		gid="`$Echo $user_line | $Nawk -F':' '{ print $3 }'`"

		$Echo_msg "$Info_detail Group ${group}:${gid}"

		if ! $Groupadd -g $gid $group; then
			$Echo_msg \
				"${Info_detail}${Info_detail} Group $group could not be added."
		fi
	done
}


i_addUsers()
{
	$Echo_msg "$Info Adding users ..."

	getKeywordList user | tr ',' '\n' | while read user_line; do
		user="`$Echo $user_line | $Nawk -F':' '{ print $1 }'`"
		password="`$Echo $user_line | $Nawk -F':' '{ print $2 }'`"
		uid="`$Echo $user_line | $Nawk -F':' '{ print $3 }'`"
		gid="`$Echo $user_line | $Nawk -F':' '{ print $4 }'`"
		comment="`$Echo $user_line | $Nawk -F':' '{ print $5 }'`"
		home="`$Echo $user_line | $Nawk -F':' '{ print $6 }'`"
		shell="`$Echo $user_line | $Nawk -F':' '{ print $7 }'`"

		if [ "$password" = "*" ]; then
			password_str=""
		else
			password_str="-p $password"
		fi

		$Echo_msg "$Info_detail User ${user}:${uid}:${gid}"

		if ! $Useradd $password_str -u $uid -g $gid -c "$comment" \
				-d "$home" -m -s $shell $user; then
			$Echo_msg \
				"${Info_detail}${Info_detail} User $user could not be added."
		fi
	done
}


addUsersAndGroups()
{
	i_addGroups
	i_addUsers
}
