#!/usr/bin/perl -w
use strict;
use warnings;

##
# create-profile - creates a normalized profile
#
# Author: Fletcher Nichol
# $Id$
##

use File::Basename;

if ( $#ARGV > 1 ) {
	&usage();
	exit 1;
}

my $Output;


MAIN: {
	my $input_file = $ARGV[0];

	if ( $#ARGV == 1 ) {
		my $output_file = $ARGV[1];
		open(OUTFILE, ">$output_file");
		$Output = *OUTFILE;
	}
	else {
		$Output = *STDOUT;
	}

	&process_profile( $input_file );

	if ( $#ARGV == 1 ) {
		close(OUTFILE);
	}
}


sub usage {
	print "usage: " . basename( $0 ) . " <filename> [<outputfile>]\n";
}


sub process_profile {
	my ( $input_file ) = @_;

	open( my $file_handle, "<", $input_file ) 
		or die "Cannot find profile $input_file\n";

	while( <$file_handle> )
	{
		if ( /^\@include[ \t]+.+$/ ) { 
			chomp;
			my @include_line = split(/[ \t]+/);
			my $include_file = dirname( $input_file ) . '/' . $include_line[1];
			&process_profile( $include_file );
		}
		elsif ( $_ !~ /^#[ \t]*\$Id[:\$]/ ) { 
			print $Output "$_";
		}
	}
	close( $file_handle );
}

__END__


=head1 NAME

create-profile - creates a normalized profile

=head1 SYNOPSIS

B<create-profile> I<filename> [I<outputfile>]

=head1 DESCRIPTION

B<create-profile> takes a profile template containing @include tokens and 
writes a normalized profile to the specified output file or on the standard 
output.

=head1 SEE ALSO

perl(1)

=head1 AUTHOR

Fletcher Nichol
